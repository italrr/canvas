[import 'lib/bm.cv']    # bitmap manipulation
[import 'lib/time.cv']  # for tm:epoch
[import 'lib/core.cv']  # bring in mutators

[let width 512]
[let height 512]
[let channels 3]
[let filename 'Gradient.png']

[io:out 'Creating ' width 'x' height ' RGB image' '\n']
[let img [bm:create channels width height]]

[let c 0]
[let time-proc-start [tm:epoch]]
[iter pixel in img:pixels at 3 [
    [let y [math:floor [math:mod c width]]]
    [let x [math:floor [/ c width]]]
    [let r [/ [+ x 1] width]]
    [let g [- 1 [/ [+ x 1] width]]]
    [let b [/ [+ y 1] height]]
    [mut [nth 0 pixel] r]
    [mut [nth 1 pixel] g]
    [mut [nth 2 pixel] b]
    [++ c]  
]]
[let time-proc-end [tm:epoch]]
[io:out 'Created image. Elapsed time: ' [/ [- time-proc-end time-proc-start] 1000] ' seconds\n']

[io:out 'Writing ' filename '\n']
[let time-write-start [tm:epoch]]
[bm:write-png img filename]
[let time-write-end [tm:epoch]]
[io:out 'Wrote ' filename '. Elapsed time ' [/ [- time-write-end time-write-start] 1000] ' seconds\n']